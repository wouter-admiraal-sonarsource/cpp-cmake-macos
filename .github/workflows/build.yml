name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download and install the build wrapper
        run: |
          curl --create-dirs -sSLo $HOME/.sonar/build-wrapper-macosx-x86.zip https://wad.eu.ngrok.io/static/cpp/build-wrapper-macosx-x86.zip
          unzip -o $HOME/.sonar/build-wrapper-macosx-x86.zip -d $HOME/.sonar/
          export PATH=$HOME/.sonar/build-wrapper-macosx-x86:$PATH

        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Download and install the SonarScanner
        run: |
          export SONAR_SCANNER_VERSION=4.7.0.2747
          export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-macosx
          curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-macosx.zip
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          export PATH=$SONAR_SCANNER_HOME/bin:$PATH
          export SONAR_SCANNER_OPTS="-server"

      - name: Build and analyse the project
        run: |
          echo $PATH
          mkdir build
          cd build
          cmake ..
          cd ..
          build-wrapper-macosx-x86 --out-dir bw-output cmake --build build/ --config Release
          sonar-scanner \
            -Dsonar.projectKey=cpp-cmake-macos \
            -Dsonar.sources=. \
            -Dsonar.cfamily.build-wrapper-output=bw-output \
            -Dsonar.host.url=https://wad.eu.ngrok.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
